@using RecipeFinder.Core.Models.RecipeModels
@model AllRecipesQueryModel

@{
    ViewData["Title"] = "Manage Recipes";
}


<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <h4>Dashboard</h4>
        </div>
    </div>
</div>
<form method="get">
    <div class="container">
        <div class="search-filter-sort row align-items-center">
            <div class="form-group col-md-3">
                <label asp-for="Search"></label>
                <input asp-for="Search" class="form-control" placeholder="Type here....">
            </div>
            <div class="col-md-2">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Difficulty"></label>
                <select asp-for="Difficulty" class="form-control">
                    <option value="">All</option>
                    @foreach (var difficulty in Model.Difficulties)
                    {
                        <option value="@difficulty">@difficulty</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <div class="form-group mt-4 p-2">
                    <input type="submit" value="Search" class="btn btn-success" />
                </div>
            </div>
            <div class="col-md-2">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Popular</option>
                    <option value="3">Ingredients count (Ascending)</option>
                    <option value="4">Ingredients count (Descending)</option>
                    <option value="5">Preparation time (Ascending)</option>
                    <option value="6">Preparation time (Descending)</option>
                </select>
            </div>
        </div>
    </div>
</form>
<div class="row">
    <div class="col-md-12 mb-3">
        <div class="card">
            <div class="card-header">
                <span><i class="bi bi-table me-2"></i></span> Data Table
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="example"
                           class="table table-striped data-table"
                           style="width: 100%">
                        <thead>
                            <tr>
                                <th>Cook name</th>
                                <th>Recipe name</th>
                                <th>Category</th>
                                <th>Difficulty</th>
                                <th>Posted on</th>
                                <th>Comments</th>
                                <th>Ingredients</th>
                            </tr>
                        </thead>
                        @if (Model.Recipes.Any())
                        {
                            <tbody>
                                @foreach (var item in Model.Recipes)
                                {
                                    <tr>
                                        <td>@item.CookFirstName @item.CookLastName</td>
                                        <td>@item.Name</td>
                                        <td>@item.CategoryName</td>
                                        <td>@item.DifficultyName</td>
                                        <td>@item.PostedOn</td>
                                        <td>@item.CommentCount</td>
                                        <td>@item.IngredientCount</td>
                                        <td>
                                            <form method="post" asp-area="" asp-controller="Recipe" asp-action="Delete" asp-route-id="@item.Id" style="margin-bottom:auto;">
                                                <button type="submit" class="btn btn-danger">Delete</button>
                                            </form>
                                        </td>
                                        <td><a asp-area="" asp-action="Edit" asp-controller="Recipe" asp-route-id="@item.Id" class="btn btn-warning">Edit</a></td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tr>
                                <td colspan="7">No data found</td>
                            </tr>
                        }
                        <tfoot>
                            <tr>
                                <th>Cook name</th>
                                <th>Recipe name</th>
                                <th>Category</th>
                                <th>Difficulty</th>
                                <th>Posted on</th>
                                <th>Comments</th>
                                <th>Ingredients</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
        </div>
@if (Model.Recipes.Any())
{
    <nav aria-label="Page navigation" style="padding-top:2px;display:flex;justify-content:center;">

        <ul class="pagination">
            <li class="page-item">
                @{
                    var previousPage = Model.CurrentPage - 1;
                    if (previousPage < 1)
                    {
                        previousPage = 1;
                    }

                    var maxPage = Math.Ceiling((double)Model.TotalRecipesCount /
                    Model.RecipesPerPage);
                }

                <a class="btn btn-dark @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                   asp-controller="Management"
                   asp-action="ManageRecipes"
                   asp-route-currentPage="@previousPage"
                   asp-route-category="@Model.Category"
                   asp-route-difficulty="@Model.Difficulty"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">Previous</a>


                @{
                    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                    !Model.Recipes.Any();
                }



            </li>
            <li class="page-item">

                <a class="btn btn-dark
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Management"
                   asp-action="ManageRecipes"
                   asp-route-currentPage="@(Model.CurrentPage)"
                   asp-route-category="@Model.Category"
                   asp-route-difficulty="@Model.Difficulty"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">@Model.CurrentPage</a>

            </li>

            <li class="page-item">

                <a class="btn btn-dark
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Management"
                   asp-action="ManageRecipes"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-category="@Model.Category"
                   asp-route-difficulty="@Model.Difficulty"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">@(Model.CurrentPage + 1)</a>

            </li>
            <li class="page-item">

                <a class="btn btn-dark
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Management"
                   asp-action="ManageRecipes"
                   asp-route-currentPage="@(Model.CurrentPage + 2)"
                   asp-route-category="@Model.Category"
                   asp-route-difficulty="@Model.Difficulty"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">@(Model.CurrentPage + 2)</a>

            </li>
            <li class="page-item">

                <a class="btn btn-dark
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Management"
                   asp-action="ManageRecipes"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-category="@Model.Category"
                   asp-route-difficulty="@Model.Difficulty"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">Next</a>

            </li>
        </ul>

    </nav>
}