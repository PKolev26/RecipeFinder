@using RecipeFinder.Extensions
@model AllRecipesQueryModel

@{
    ViewBag.Title = "All Recipes";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<link rel="stylesheet" href="~/css/card.css">

<form method="get">
    <div class="container">
        <div class="search-filter-sort row align-items-center">
            <div class="form-group col-md-3">
                <label asp-for="Search"></label>
                <input asp-for="Search" class="form-control" placeholder="Type here....">
            </div>
            <div class="col-md-2">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Difficulty"></label>
                <select asp-for="Difficulty" class="form-control">
                    <option value="">All</option>
                    @foreach (var difficulty in Model.Difficulties)
                    {
                        <option value="@difficulty">@difficulty</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <div class="form-group mt-4 p-2">
                    <input type="submit" value="Search" class="btn btn-warning" />
                </div>
            </div>
            <div class="col-md-2">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Popular</option>
                    <option value="3">Ingredients count (Ascending)</option>
                    <option value="4">Ingredients count (Descending)</option>
                    <option value="5">Preparation time (Ascending)</option>
                    <option value="6">Preparation time (Descending)</option>
                </select>
            </div>
        </div>
    </div>
</form>

<hr />

@if (!Model.Recipes.Any())
{
    <h2 class="text-center">No recipes found!</h2>
}

<div class="row-and-pagination">
<div class="row">
    @foreach (var recipe in Model.Recipes)
    {
        <div class="card col-4" style="width: 20rem;">
            <div class="card-body">
                <section class="main-info">
                    <h3 class="card-title">@recipe.Name</h3>
                    <img class="card-imgurl" style="height:15rem;" src="@recipe.ImageUrl" alt="recipe image" />
                    <h5 class="card-cook"><span class="fw-bold">Cooked by:</span> @recipe.Cook.Substring(0, recipe.Cook.LastIndexOf("@"))</h5>
                </section>
                <br />
                <section class="additional-info">
                    <p class="mb-0"><span class="fw-bold">Preparation time: </span>@recipe.PreparationTime min</p>
                    <p class="mb-0"><span class="fw-bold">Category: </span> @recipe.CategoryName </p>
                    <p class="mb-0"><span class="fw-bold">Difficulty level: </span>@recipe.DifficultyName </p>
                    <p class="mb-0"><span class="fw-bold">Ingredients: </span>@recipe.IngredientCount</p>
                    <p class="mb-0"><span class="fw-bold">Comments: </span>@recipe.CommentCount</p>
                    <p class="mb-0"><span class="fw-bold">Made by: </span>@recipe.MadeByCount<span class="fw-bold"> users</span></p>
                    <br />
                </section>
                <section class="date-and-buttons">
                    <div class="date">
                        <p class="mb-0"><span class="fw-bold">Posted on: </span></p>
                        <p>@recipe.PostedOn</p>
                    </div>
                <a asp-controller="Recipe" asp-action="Details" asp-route-id="@recipe.Id" asp-route-name="@recipe.GetName()" class="btn btn-outline-warning mb-2 w-100 p-3 fw-bold">More info</a>
                @if (User.Identity.Name == recipe.Cook)
                {
                    <a asp-controller="Recipe" asp-action="Edit" asp-route-id="@recipe.Id" class="btn btn-outline-dark mb-2 w-100 p-3 fw-bold">Edit</a>
                }
                else
                {
                    if (@recipe.RecipeUser != null && recipe.RecipeUser.RecipeId == recipe.Id && recipe.RecipeUser.UserId == User.Id())
                    {
                        <form method="post" asp-controller="Recipe" asp-action="AddToRecipeBook" asp-route-id="@recipe.Id">
                            <button type="submit" class="btn btn-success mb-2 w-100 p-3 fw-bold">Added to Recipe Book</button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-controller="Recipe" asp-action="AddToRecipeBook" asp-route-id="@recipe.Id">
                            <button type="submit" class="btn btn-outline-success mb-2 w-100 p-3 fw-bold">Add to Recipe Book</button>
                        </form>
                    }
                }
                </section>
            </div>
        </div>
    }
</div>



@if (Model.Recipes.Any())
{
    <nav aria-label="Page navigation" style="padding-top:2px;display:flex;justify-content:center;">

        <ul class="pagination" >
            <li class="page-item">
                @{
                    var previousPage = Model.CurrentPage - 1;
                    if (previousPage < 1)
                    {
                        previousPage = 1;
                    }

                    var maxPage = Math.Ceiling((double)Model.TotalRecipesCount /
                    Model.RecipesPerPage);
                }

                    <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-controller="Recipe"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-category="@Model.Category"
                       asp-route-searchTerm="@Model.Search"
                       asp-route-sorting="@((int)Model.Sorting)">Previous</a>


                    @{
                        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                        !Model.Recipes.Any();
                    }

             

            </li>
            <li class="page-item">

                <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Recipe"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage)"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">@Model.CurrentPage</a>

            </li>

            <li class="page-item">

                <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Recipe"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">@(Model.CurrentPage + 1)</a>

            </li>
            <li class="page-item">

                <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Recipe"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage + 2)"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">@(Model.CurrentPage + 2)</a>

            </li>
            <li class="page-item">

                <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Recipe"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.Search"
                   asp-route-sorting="@((int)Model.Sorting)">Next</a>

            </li>
        </ul>

    </nav>
}
</div>